---
import CardContributions from '@components/CardContributions.astro'

let { title } = { title: 'Alle Projekte' }

let contributions: any = []
let loading:boolean = true;
try {
  loading = true;
  const response = await fetch(
    'http://localhost:8080/api/repos/allRepos'
  )
  if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`)
  const data = await response.json()
  contributions = data.projects
} catch (err) {
  console.error('Fetch error:', err)
} finally {
  loading = false;
}
---

<section
  id="all-projects"
  class="contributions"
  data-aos="fade-up"
  data-aos-easing="ease-in-sine"
>
  <h2>
    <span>{title} {loading}</span>
  </h2>
  <div id="loading" style={loading ? 'display: flex;' : 'display: none;'}>
    <div class="loader"></div>
  </div>
  </style>
  <div class="card-projects" style={loading ? 'display: none;' : 'display: grid;'}>
    {
      contributions.map(
        ({
          src,
          full_name,
          name,
          description,
          topics,
          html_url,
          repo_label: repoLabel
        }: any) => (
          <CardContributions
            alt={full_name}
            title={name}
            description={description}
            techs={topics}
            repo={html_url}
            repoLabel={repoLabel}
          />
        )
      )
    }
  </div>
</section>

<style>
  .contributions {
    padding-bottom: 120px;

    & h2 {
      display: flex;
      gap: 24px;
      justify-content: center;
      align-items: center;
      white-space: nowrap;
      margin-bottom: 48px;

      @media (width >= 768px) {
        justify-content: start;

        &::before,
        &::after {
          content: '';
          display: block;
          width: 100%;
          height: 1px;
          background-color: var(--border-color);
        }
      }
    }

    & .card-projects {
      display: grid;
      align-items: center;
      gap: 36px;

      @media (width >= 768px) {
        grid-template-columns: repeat(2, 1fr);
      }

      @media (width >= 1200px) {
        grid-template-columns: repeat(3, 1fr);
      }
    }
  }

  #loading {
    display: block;
    width: 100%;
    height: 50vh;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  /* HTML: <div class="loader"></div> */
  .loader {
    width: 50px;
    padding: 8px;
    aspect-ratio: 1;
    border-radius: 50%;
    background: #25b09b;
    --_m: conic-gradient(#0000 10%, #000), linear-gradient(#000 0 0) content-box;
    -webkit-mask: var(--_m);
    mask: var(--_m);
    -webkit-mask-composite: source-out;
    mask-composite: subtract;
    animation: l3 1s infinite linear;
  }
  @keyframes l3 {
    to {
      transform: rotate(1turn);
    }
  }
</style>
